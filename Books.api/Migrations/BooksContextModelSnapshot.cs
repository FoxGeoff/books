// <auto-generated />
using System;
using Books.api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.api.Migrations
{
    [DbContext(typeof(BooksContext))]
    partial class BooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.api.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("c8077fa3-9c81-4c0d-b5c7-b44884ffaf29"), FirstName = "George", LastName = "RR Martin" },
                        new { Id = new Guid("64d0b6b5-a50c-4e50-9ca5-0851e6eee16d"), FirstName = "Stephen", LastName = "Fry" },
                        new { Id = new Guid("16f33673-09fe-42a8-9e2d-1023a1d65e6f"), FirstName = "James", LastName = "Elroy" },
                        new { Id = new Guid("e731f22a-e272-4ae5-b2eb-290d95770584"), FirstName = "Douglas", LastName = "Adams" }
                    );
                });

            modelBuilder.Entity("Books.api.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = new Guid("1c714380-05ba-49e3-846a-8dca1f47fbc9"), AuthorId = new Guid("c8077fa3-9c81-4c0d-b5c7-b44884ffaf29"), Description = "The book that seems imposible to write", Title = "The Winds of Winter" },
                        new { Id = new Guid("9d3acb2b-7df4-4bd8-9f38-9919f3db1aaf"), AuthorId = new Guid("c8077fa3-9c81-4c0d-b5c7-b44884ffaf29"), Description = "The book that was easy to write", Title = "The Summer Sun" }
                    );
                });

            modelBuilder.Entity("Books.api.Entities.Book", b =>
                {
                    b.HasOne("Books.api.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
